{
    "props": [
        {
            "name": "modelValue",
            "optional": true,
            "readonly": false,
            "type": "string | boolean",
            "default": "null",
            "description": "Specifies whether a inputotp should be checked or not."
        },
        {
            "name": "defaultValue",
            "optional": true,
            "readonly": false,
            "type": "string | boolean",
            "default": "",
            "description": "The default value for the input when not controlled by  `modelValue` ."
        },
        {
            "name": "name",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "The name attribute for the element, typically used in form submissions."
        },
        {
            "name": "size",
            "optional": true,
            "readonly": false,
            "type": "\"small\" | \"large\"",
            "default": "",
            "description": "Defines the size of the component."
        },
        {
            "name": "invalid",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When present, it specifies that the component should have invalid state style."
        },
        {
            "name": "disabled",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When present, it specifies that the component should be disabled."
        },
        {
            "name": "readonly",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When present, it specifies that an input field is read-only."
        },
        {
            "name": "variant",
            "optional": true,
            "readonly": false,
            "type": "\"outlined\" | \"filled\"",
            "default": "outlined",
            "description": "Specifies the input variant of the component."
        },
        {
            "name": "tabindex",
            "optional": true,
            "readonly": false,
            "type": "number",
            "default": "",
            "description": "Index of the element in tabbing order."
        },
        {
            "name": "length",
            "optional": true,
            "readonly": false,
            "type": "number",
            "default": "4",
            "description": "Number of characters to initiate."
        },
        {
            "name": "mask",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "Mask pattern."
        },
        {
            "name": "integerOnly",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When present, it specifies that an input field is integer-only."
        },
        {
            "name": "formControl",
            "optional": true,
            "readonly": false,
            "type": "Record<string, any>",
            "default": "",
            "description": "Form control object, typically used for handling validation and form state."
        },
        {
            "name": "dt",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "It generates scoped CSS variables using design tokens for the component."
        },
        {
            "name": "pt",
            "optional": true,
            "readonly": false,
            "type": "PassThrough<InputOtpPassThroughOptions>",
            "default": "",
            "description": "Used to pass attributes to DOM elements inside the component."
        },
        {
            "name": "ptOptions",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Used to configure passthrough(pt) options of the component."
        },
        {
            "name": "unstyled",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When enabled, it removes component related styles in the core."
        }
    ],
    "slots": [
        {
            "name": "default",
            "parameters": [
                {
                    "name": "scope",
                    "optional": false,
                    "type": "{\n \t <span class=\"ml-3 doc-option-parameter-name\">events</span>: <span class=\"doc-option-parameter-type\">(<span class=\"doc-option-parameter-name\">index</span>: number) &rArr; InputOtpTemplateEvents</span>, <span class=\"doc-option-parameter-type\">// Events of the component</span>\n\t <span class=\"ml-3 doc-option-parameter-name\">attrs</span>: <span class=\"doc-option-parameter-type\">(<span class=\"doc-option-parameter-name\">index</span>: number) &rArr; InputOtpTemplateAttrsOptions</span>, <span class=\"doc-option-parameter-type\">// Attributes of the component</span>\n \t <span class=\"ml-3 doc-option-parameter-name\">index</span>: <span class=\"doc-option-parameter-type\">number</span>, <span class=\"doc-option-parameter-type\">// Index of the input field</span>\n }"
                }
            ],
            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
            "description": "Default content slot."
        }
    ],
    "emits": [
        {
            "name": "update:modelValue",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "string",
                    "description": "New value."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the value changes."
        },
        {
            "name": "value-change",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "string",
                    "description": "New value."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the value changes in uncontrolled mode."
        },
        {
            "name": "change",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "InputOtpChangeEvent",
                    "description": "Custom change event."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke on value change."
        },
        {
            "name": "focus",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "Event",
                    "description": "Browser event."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when the component receives focus."
        },
        {
            "name": "blur",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "Event",
                    "description": "Browser event."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when the component loses focus."
        }
    ],
    "template": "\n<InputOtp v-model=\"value\" />\n"
}