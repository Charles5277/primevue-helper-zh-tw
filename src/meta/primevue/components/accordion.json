{
    "props": [
        {
            "name": "value",
            "optional": true,
            "readonly": false,
            "type": "null | string | string[]",
            "default": "null",
            "description": "Value of the active panel or an array of values in multiple mode."
        },
        {
            "name": "multiple",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When enabled, multiple tabs can be activated at the same time."
        },
        {
            "name": "activeIndex",
            "optional": true,
            "readonly": false,
            "type": "null | number | number[]",
            "default": "null",
            "description": "Index of the active tab or an array of indexes in multiple mode.",
            "deprecated": "since v4. Use value property instead."
        },
        {
            "name": "lazy",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When enabled, hidden tabs are not rendered at all. Defaults to false that hides tabs with css."
        },
        {
            "name": "expandIcon",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Icon of a collapsed tab."
        },
        {
            "name": "collapseIcon",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Icon of an expanded tab."
        },
        {
            "name": "tabindex",
            "optional": true,
            "readonly": false,
            "type": "number",
            "default": "0",
            "description": "Index of the element in tabbing order."
        },
        {
            "name": "selectOnFocus",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When enabled, the focused tab is activated."
        },
        {
            "name": "dt",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "It generates scoped CSS variables using design tokens for the component."
        },
        {
            "name": "pt",
            "optional": true,
            "readonly": false,
            "type": "PassThrough<AccordionPassThroughOptions>",
            "default": "",
            "description": "Used to pass attributes to DOM elements inside the component."
        },
        {
            "name": "ptOptions",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Used to configure passthrough(pt) options of the component."
        },
        {
            "name": "unstyled",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When enabled, it removes component related styles in the core."
        }
    ],
    "slots": [
        {
            "name": "default",
            "parameters": [],
            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
            "description": "Default slot to detect AccordionTab components."
        },
        {
            "name": "collapseicon",
            "parameters": [],
            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
            "description": "Custom collapse icon template."
        },
        {
            "name": "expandicon",
            "parameters": [],
            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
            "description": "Custom expand icon template."
        }
    ],
    "emits": [
        {
            "name": "update:value",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "undefined | null | string | string[]",
                    "description": "Value of new active panel."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the active panel changes."
        },
        {
            "name": "update:activeIndex",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "undefined | number",
                    "description": "Index of new active tab."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the active tab changes.",
            "deprecated": "since v4. Use update:value emit instead."
        },
        {
            "name": "tab-open",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "AccordionTabOpenEvent",
                    "description": "Custom tab open event."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when a tab gets expanded.",
            "deprecated": "since v4."
        },
        {
            "name": "tab-close",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "AccordionTabCloseEvent",
                    "description": "Custom tab close event."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when an active tab is collapsed by clicking on the header.",
            "deprecated": "since v4."
        },
        {
            "name": "tab-click",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "AccordionClickEvent",
                    "description": "Custom tab click event."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when an active tab is clicked.",
            "deprecated": "since v4."
        }
    ],
    "template": "\n<Accordion value=\"0\">\n    <AccordionPanel value=\"0\">\n        <AccordionHeader>Header I</AccordionHeader>\n        <AccordionContent>\n            <p class=\"m-0\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n        </AccordionContent>\n    </AccordionPanel>\n    <AccordionPanel value=\"1\">\n        <AccordionHeader>Header II</AccordionHeader>\n        <AccordionContent>\n            <p class=\"m-0\">\n                Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim\n                ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Consectetur, adipisci velit, sed quia non numquam eius modi.\n            </p>\n        </AccordionContent>\n    </AccordionPanel>\n    <AccordionPanel value=\"2\">\n        <AccordionHeader>Header III</AccordionHeader>\n        <AccordionContent>\n            <p class=\"m-0\">\n                At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa\n                qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus.\n            </p>\n        </AccordionContent>\n    </AccordionPanel>\n</Accordion>\n"
}