{
    "props": [
        {
            "name": "modelValue",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Value of the component."
        },
        {
            "name": "defaultValue",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "The default value for the input when not controlled by  `modelValue` ."
        },
        {
            "name": "slotChar",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "_",
            "description": "Placeholder character in mask, default is underscore."
        },
        {
            "name": "mask",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Mask pattern."
        },
        {
            "name": "id",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Identifier of the element."
        },
        {
            "name": "class",
            "optional": true,
            "readonly": false,
            "type": "string | object",
            "default": "",
            "description": "Style class of the input field."
        },
        {
            "name": "placeholder",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Placeholder text for the input."
        },
        {
            "name": "autoClear",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "true",
            "description": "Clears the incomplete value on blur."
        },
        {
            "name": "unmask",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "Defines if model sets the raw unmasked value to bound value or the formatted mask value."
        },
        {
            "name": "readonly",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "Whether the items are clickable or not."
        },
        {
            "name": "invalid",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When present, it specifies that the component should have invalid state style."
        },
        {
            "name": "name",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Name of the input element."
        },
        {
            "name": "size",
            "optional": true,
            "readonly": false,
            "type": "\"small\" | \"large\"",
            "default": "",
            "description": "Defines the size of the component."
        },
        {
            "name": "variant",
            "optional": true,
            "readonly": false,
            "type": "\"outlined\" | \"filled\"",
            "default": "outlined",
            "description": "Specifies the input variant of the component."
        },
        {
            "name": "fluid",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "null",
            "description": "Spans 100% width of the container when enabled."
        },
        {
            "name": "disabled",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When present, it specifies that the component should be disabled."
        },
        {
            "name": "dt",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "It generates scoped CSS variables using design tokens for the component."
        },
        {
            "name": "pt",
            "optional": true,
            "readonly": false,
            "type": "PassThrough<InputMaskPassThroughOptions>",
            "default": "",
            "description": "Used to pass attributes to DOM elements inside the component."
        },
        {
            "name": "ptOptions",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Used to configure passthrough(pt) options of the component."
        },
        {
            "name": "unstyled",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When enabled, it removes component related styles in the core."
        }
    ],
    "slots": [],
    "emits": [
        {
            "name": "update:modelValue",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "string",
                    "description": "New value."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the value changes."
        },
        {
            "name": "value-change",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "string",
                    "description": "New value."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the value changes in uncontrolled mode."
        },
        {
            "name": "focus",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "Event"
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when the component receives focus."
        },
        {
            "name": "blur",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "Event"
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when the component loses focus."
        },
        {
            "name": "keydown",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "Event"
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when a key is pressed."
        }
    ],
    "template": "\n<InputMask id=\"basic\" v-model=\"value\" mask=\"99-999999\" placeholder=\"99-999999\" />\n"
}