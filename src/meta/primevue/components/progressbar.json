{
    "props": [
        {
            "name": "value",
            "optional": true,
            "readonly": false,
            "type": "number",
            "default": "",
            "description": "Current value of the progress."
        },
        {
            "name": "mode",
            "optional": true,
            "readonly": false,
            "type": "\"determinate\" | \"indeterminate\"",
            "default": "determinate",
            "description": "Defines the mode of the progress"
        },
        {
            "name": "showValue",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "true",
            "description": "Whether to display the progress bar value."
        },
        {
            "name": "dt",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "It generates scoped CSS variables using design tokens for the component."
        },
        {
            "name": "pt",
            "optional": true,
            "readonly": false,
            "type": "PassThrough<ProgressBarPassThroughOptions<any>>",
            "default": "",
            "description": "Used to pass attributes to DOM elements inside the component."
        },
        {
            "name": "ptOptions",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Used to configure passthrough(pt) options of the component."
        },
        {
            "name": "unstyled",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When enabled, it removes component related styles in the core."
        }
    ],
    "slots": [
        {
            "name": "default",
            "parameters": [],
            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
            "description": "Custom content slot."
        }
    ],
    "emits": [],
    "template": "\n<ProgressBar :value=\"50\"></ProgressBar>\n"
}