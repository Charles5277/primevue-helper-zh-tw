{
    "props": [
        {
            "name": "value",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Value of the checkbox."
        },
        {
            "name": "modelValue",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Value binding of the checkbox."
        },
        {
            "name": "name",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Name of the input element."
        },
        {
            "name": "binary",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "",
            "description": "Allows to select a boolean value instead of multiple values."
        },
        {
            "name": "indeterminate",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "",
            "description": "When present, it specifies input state as indeterminate."
        },
        {
            "name": "invalid",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When present, it specifies that the component should have invalid state style."
        },
        {
            "name": "disabled",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "",
            "description": "When present, it specifies that the element should be disabled."
        },
        {
            "name": "variant",
            "optional": true,
            "readonly": false,
            "type": "\"outlined\" | \"filled\"",
            "default": "outlined",
            "description": "Specifies the input variant of the component."
        },
        {
            "name": "readonly",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "",
            "description": "When present, it specifies that an input field is read-only."
        },
        {
            "name": "required",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "",
            "description": "When present, it specifies that the element is required."
        },
        {
            "name": "tabindex",
            "optional": true,
            "readonly": false,
            "type": "number",
            "default": "",
            "description": "Index of the element in tabbing order."
        },
        {
            "name": "trueValue",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Value in checked state."
        },
        {
            "name": "falseValue",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Value in unchecked state."
        },
        {
            "name": "inputId",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Identifier of the underlying input element."
        },
        {
            "name": "inputClass",
            "optional": true,
            "readonly": false,
            "type": "object",
            "default": "",
            "description": "Style class of the input field."
        },
        {
            "name": "inputStyle",
            "optional": true,
            "readonly": false,
            "type": "string | object",
            "default": "",
            "description": "Inline style of the input field."
        },
        {
            "name": "ariaLabelledby",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs."
        },
        {
            "name": "ariaLabel",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "Establishes a string value that labels the component."
        },
        {
            "name": "dt",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "It generates scoped CSS variables using design tokens for the component."
        },
        {
            "name": "pt",
            "optional": true,
            "readonly": false,
            "type": "PassThrough<CheckboxPassThroughOptions>",
            "default": "",
            "description": "Used to pass attributes to DOM elements inside the component."
        },
        {
            "name": "ptOptions",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Used to configure passthrough(pt) options of the component."
        },
        {
            "name": "unstyled",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When enabled, it removes component related styles in the core."
        }
    ],
    "slots": [
        {
            "name": "icon",
            "parameters": [
                {
                    "name": "scope",
                    "optional": false,
                    "type": "{\n  \t <span class=\"ml-3 doc-option-parameter-name\">checked</span>: <span class=\"doc-option-parameter-type\">boolean</span>, <span class=\"doc-option-parameter-type\">// State of the checkbox.</span>\n  \t <span class=\"ml-3 doc-option-parameter-name\">indeterminate</span>: <span class=\"doc-option-parameter-type\">boolean</span>, <span class=\"doc-option-parameter-type\">// Indeterminate state of the checkbox.</span>\n  \t <span class=\"ml-3 doc-option-parameter-name\">class</span>: <span class=\"doc-option-parameter-type\">string</span>, <span class=\"doc-option-parameter-type\">// Style class of the icon.</span>\n }",
                    "description": "icon slot's params."
                }
            ],
            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
            "description": "Custom icon template."
        }
    ],
    "emits": [
        {
            "name": "update:modelValue",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "any",
                    "description": "New value."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the value changes."
        },
        {
            "name": "change",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "Event",
                    "description": "Browser event."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke on value change."
        },
        {
            "name": "focus",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "Event",
                    "description": "Browser event."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when the component receives focus."
        },
        {
            "name": "blur",
            "parameters": [
                {
                    "name": "event",
                    "optional": false,
                    "type": "Event",
                    "description": "Browser event."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when the component loses focus."
        }
    ],
    "template": "\n<Checkbox v-model=\"checked\" :binary=\"true\" />\n"
}