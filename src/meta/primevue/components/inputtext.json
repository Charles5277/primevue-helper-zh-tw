{
    "props": [
        {
            "name": "modelValue",
            "optional": true,
            "readonly": false,
            "type": "Nullable<string>",
            "default": "",
            "description": "Value of the component."
        },
        {
            "name": "defaultValue",
            "optional": true,
            "readonly": false,
            "type": "Nullable<string>",
            "default": "",
            "description": "The default value for the input when not controlled by  `modelValue` ."
        },
        {
            "name": "name",
            "optional": true,
            "readonly": false,
            "type": "string",
            "default": "",
            "description": "The name attribute for the element, typically used in form submissions."
        },
        {
            "name": "size",
            "optional": true,
            "readonly": false,
            "type": "null | \"small\" | \"large\"",
            "default": "",
            "description": "Defines the size of the component."
        },
        {
            "name": "invalid",
            "optional": true,
            "readonly": false,
            "type": "null | boolean",
            "default": "false",
            "description": "When present, it specifies that the component should have invalid state style."
        },
        {
            "name": "variant",
            "optional": true,
            "readonly": false,
            "type": "null | \"outlined\" | \"filled\"",
            "default": "outlined",
            "description": "Specifies the input variant of the component."
        },
        {
            "name": "fluid",
            "optional": true,
            "readonly": false,
            "type": "null | boolean",
            "default": "null",
            "description": "Spans 100% width of the container when enabled."
        },
        {
            "name": "formControl",
            "optional": true,
            "readonly": false,
            "type": "Record<string, any>",
            "default": "",
            "description": "Form control object, typically used for handling validation and form state."
        },
        {
            "name": "dt",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "It generates scoped CSS variables using design tokens for the component."
        },
        {
            "name": "pt",
            "optional": true,
            "readonly": false,
            "type": "PassThrough<InputTextPassThroughOptions<any>>",
            "default": "",
            "description": "Used to pass attributes to DOM elements inside the component."
        },
        {
            "name": "ptOptions",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Used to configure passthrough(pt) options of the component."
        },
        {
            "name": "unstyled",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When enabled, it removes component related styles in the core."
        }
    ],
    "slots": [],
    "emits": [
        {
            "name": "update:modelValue",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "undefined | string",
                    "description": "New value."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the value changes."
        },
        {
            "name": "value-change",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "undefined | string",
                    "description": "New value."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the value changes in uncontrolled mode."
        }
    ],
    "template": "\n<InputText type=\"text\" v-model=\"value\" />\n"
}