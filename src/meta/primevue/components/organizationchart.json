{
    "props": [
        {
            "name": "value",
            "optional": true,
            "readonly": false,
            "type": "OrganizationChartNode",
            "default": "",
            "description": "Value of the component."
        },
        {
            "name": "selectionKeys",
            "optional": true,
            "readonly": false,
            "type": "OrganizationChartSelectionKeys",
            "default": "",
            "description": "A map instance of key-value pairs to represented the selected nodes."
        },
        {
            "name": "selectionMode",
            "optional": true,
            "readonly": false,
            "type": "\"single\" | \"multiple\"",
            "default": "",
            "description": "Type of the selection."
        },
        {
            "name": "collapsedKeys",
            "optional": true,
            "readonly": false,
            "type": "OrganizationChartCollapsedKeys",
            "default": "",
            "description": "A map instance of key-value pairs to represented the collapsed nodes."
        },
        {
            "name": "collapsible",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "Whether the nodes can be expanded or toggled."
        },
        {
            "name": "dt",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "It generates scoped CSS variables using design tokens for the component."
        },
        {
            "name": "pt",
            "optional": true,
            "readonly": false,
            "type": "PassThrough<OrganizationChartPassThroughOptions>",
            "default": "",
            "description": "Used to pass attributes to DOM elements inside the component."
        },
        {
            "name": "ptOptions",
            "optional": true,
            "readonly": false,
            "type": "any",
            "default": "",
            "description": "Used to configure passthrough(pt) options of the component."
        },
        {
            "name": "unstyled",
            "optional": true,
            "readonly": false,
            "type": "boolean",
            "default": "false",
            "description": "When enabled, it removes component related styles in the core."
        }
    ],
    "slots": [
        {
            "name": "default",
            "parameters": [
                {
                    "name": "scope",
                    "optional": false,
                    "type": "{\n  \t <span class=\"ml-3 doc-option-parameter-name\">node</span>: <span class=\"doc-option-parameter-type\">any</span>, <span class=\"doc-option-parameter-type\">// Current node</span>\n }"
                }
            ],
            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
            "description": "Custom content template."
        },
        {
            "name": "togglericon",
            "parameters": [
                {
                    "name": "scope",
                    "optional": false,
                    "type": "{\n  \t <span class=\"ml-3 doc-option-parameter-name\">expanded</span>: <span class=\"doc-option-parameter-type\">boolean</span>, <span class=\"doc-option-parameter-type\">// Curent state of the node</span>\n }",
                    "description": "togglericon slot's params."
                }
            ],
            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
            "description": "",
            "deprecated": "since v4.0. Use 'toggleicon' slot instead.\nCustom toggler icon template."
        },
        {
            "name": "toggleicon",
            "parameters": [
                {
                    "name": "scope",
                    "optional": false,
                    "type": "{\n  \t <span class=\"ml-3 doc-option-parameter-name\">expanded</span>: <span class=\"doc-option-parameter-type\">boolean</span>, <span class=\"doc-option-parameter-type\">// Curent state of the node</span>\n }",
                    "description": "togglericon slot's params."
                }
            ],
            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
            "description": "Custom toggler icon template."
        }
    ],
    "emits": [
        {
            "name": "update:selectionKeys",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "any",
                    "description": "New value."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the value changes."
        },
        {
            "name": "update:collapsedKeys",
            "parameters": [
                {
                    "name": "value",
                    "optional": false,
                    "type": "boolean",
                    "description": "New value."
                }
            ],
            "returnType": "void",
            "description": "Emitted when the value changes."
        },
        {
            "name": "node-select",
            "parameters": [
                {
                    "name": "node",
                    "optional": false,
                    "type": "OrganizationChartNode",
                    "description": "Node instance."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when a suggestion is selected."
        },
        {
            "name": "node-unselect",
            "parameters": [
                {
                    "name": "node",
                    "optional": false,
                    "type": "OrganizationChartNode",
                    "description": "Node instance."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when a node is unselected."
        },
        {
            "name": "node-expand",
            "parameters": [
                {
                    "name": "node",
                    "optional": false,
                    "type": "OrganizationChartNode",
                    "description": "Node instance."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when a node is expanded."
        },
        {
            "name": "node-collapsed",
            "parameters": [
                {
                    "name": "node",
                    "optional": false,
                    "type": "OrganizationChartNode",
                    "description": "Node instance."
                }
            ],
            "returnType": "void",
            "description": "Callback to invoke when a node is collapsed."
        }
    ],
    "template": "\n<OrganizationChart :value=\"data\">\n    <template #default=\"slotProps\">\n        <span>{{ slotProps.node.label }}</span>\n    </template>\n</OrganizationChart>\n"
}